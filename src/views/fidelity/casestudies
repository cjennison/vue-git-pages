<h2><strong>Compliance Website Redesign - Admin View</strong></h2>

[Final Design Images]

                    <h3><strong>The Basics</strong></h3>

                    <strong>Role</strong>
                    Researcher and UX Designer
                    
                    <strong>Tools</strong>
                    Sketch and Invision
                    
                    <strong>Time Constraint</strong>
                    2 weeks

                    <h3><strong>The Overview</strong></h3>

                    <p>The compliance website is an internal website for Fidelity employees to disclose different types of information that could cause legal issues. These disclosures ranged from if an employee worked another job at another company and what that work entailed to what an employee donated to a political campaign.</p>
                    <p>All disclosures were sent to the employee's manager for a preliminary approval and then sent further to the compliance admin office. The job of the admins was to see who the employee was and wether their disclosure was okay or if they needed to cease doing whatever it was that was in the disclosure. The entire process was originally completed with paper forms. The compliance website was created first to get rid of the forms and then second to make the process easier for both the employees and the admins.</p>
                    <p>For this project, I started with the political contribution flow. Out of all of the disclosures, it was the most complicated workflow for the admins. It was also the disclosure that was the most "done". The definition of done was that it was live for both employees and admins but only checked off the barest minimum of requirements.</p>
                    
                    <h3><strong>In the Beginning...</strong></h3>
                    [Current in Place Designs]
                    
                    <p>However, only the first part was done well. The employee side was great and everyone was happy they didn't have to try to fill out forms and keep track of them as they moved through the system.</p>
                    <p>Admins were not feeling the same happiness. Digitizing forms for employees was the easiest step. Displaying it an organized fashion for admins was not. The forms, even when digitized, could potentially contain up hundreds of input points that an admin had to review. Depending on the disclosure, the admin then had to complete other steps like complete a checklist or check an employee's previous disclosures.</p>
                    <p>The main problem with making this process easier was because compliance is such a robust topic, legal teams and business teams were driving what the design should look like. Up until the point that I joined the team there was little to no user testing done. With that said, the business team was hearing the complaints from the admins and it was decided that we needed to change the current design. However, it was also decided that the development team wanted to avoid a redesign as much as possible.</p>

                    <h3><strong>The Rehash Route</strong></h3>
                    [Rehash Designs]
                    
                    <p>So the first step was a rehash of the current design. Could the information be laid out in a way in the current design that it would help the admins out better? I also had other requirements from the business to follow as well: limit page scrolling and don't cut out any data points.</p>
                    
                    <p>The rehashed designs were shown to the admin users and they were not happy. They had been hoping for a completely new design. All the rehash did was move data points around. Sure, the organization was better but the workflow the admins had to go through was still a mess and no easier than if they were doing it with the previous design.</p>

          
                    <h3><strong>Redesign Round 1</strong></h3>
                    [Redesign V1 Images]

                    <p>With the first round of designs I tried a couple different things:
                    <ul>
                    <li>Keep some elements the same as they were in the previous design but make them more organized. Similar to the rehash but I put things that weren't previously together in the same spots if they seemed to be part of the same information block.</li>
                    <li>Use scrolling but use it in a way that it didn't seem tedious to scroll. This is what brought about the jump links in the first design.</li>
                    <li>Moving unimportant information to a side panel. This would hopefully clean up much needed space for other more important components.</li>
                    <li>Unhiding steps of the userflow that were previous only accessable behind links or would open up in other windows. The idea was that if the admin needed to perform this step then we shouldn't make it hard on them to actually do it.</li>
                    </ul></p>
                    
                    <p>Users liked the second design with the full page side bar. They agreed that putting unimportant information in the side bar would be great. If they ended up needing it then they knew where to get it and how to get rid of it when they didn't need it anymore.</p>
                    <p>Pulling out the hidden user flow steps was a big hit as well. However, there were things I thought unimportant and had shoved in the side bar that the admins would need access too pretty frequently. Those would need to be pulled out and added to the main view but at the same time this would use up space that just wasn't there.</p>

                  
                    <h3><strong>Redesign Round 2</strong></h3>
                    [Redesign V2 Images]

                    <p>It turned out there was a bit more space I was able to eek out after scrunching some data together. My only worry was that some of the data was so close together that it might not be readable. There were also some issues with the old styling of buttons that caused them to bump up against other data points because they just weren't meant to be used in smaller spaces.</p>
                    <p>The other issue was adding a candidate. Normally, that process was done in a separate window and I was now trying to add it in the same few. The users wanted to limit having to have multiple tabs or windows open if possible. I took a shot at it and I don't think it looked great. Not only that but development let me know there was no way they'd be able to program a card that looked like a square stacked on a rectangle without making it obvious that they weren't connected.</p>
                    
                    <p>Even though I was worried about the data points being too close together, the users loved it. What I learned is that they used to do a lot of disclosures in Excel spreadsheets and they were used to seeing data closer together. They also had no problems with the weird square rectangle card and just appreciated not having to open a new window to add a candidate.</p>

                    <h3><strong>Final Designs</strong></h3>
                    [Redesign Final Images Again]

                    <p>Not a whole lot changed at this point. There was some tightening up of colors as the bright green didn't mesh well with the white text if you stared at it too long. The button issue was solved mostly by switching to the ghost button styling. It also matched our new card stylings better than the old gray gradient buttons.</p>
                    <p>A lot of getting to the final designs was working with the development team and making sure they could make the side panel and the card as they were designed. We came to the agreement that we could do inline editing to prevent having to make oddly shaped cards or opening the flow in another window. We assumed that with the candidacy we would be able to edit the necessary items and that would class the candidate as verified. There was still further research needed to confirm this. We did also learn that the adding a candidate would never happen from this admin screen and we were able to remove that functionality. This also helped prevent weird card shapes.</p>
                    <p>The last thing that changed was that we made it so the admin could make their disposition decision at any point during scrolling by using a sticky footer. This wasn't something that cmae up in our user feedback but it was something they ended up liking more than we expected.</p>
                    

                    <h3><strong>What I Learned</strong></h3>

                    <p><ul><li>Always get users invovled. Before I joined the project was run on assumptions and what the developers thought was most important.</li>
                    <li>Work with the development team. There was a lot of "no you can't do that" or "we don't have the technology for that" at the start but it was possible to make compromises when I was able to help find alternative solutions or new ways to use the antique software.</li>
                    <li>Compliance disclosures are not just a straight happy path. As much as I charted out the happy path, there would just be too many instances where the happy path would never be achieveable.</li>
                    </ul></p>
                    
                    <h3><strong>What I Would Change</strong></h3>
                    
                    <p><ul><li>A longer time frame in which to complete the redesign. I was able to get out a MVP for the two weeks but there were many points of the flow that we were missing and still needed to work out at the end of the two weeks.</li>
                    <li>User feedback sooner. A lot of time could've been saved in the process of a redesign if we had done user research earlier.</li>
                    </ul></p>
                    
                    
                    
                    
                    <h2><strong>17a6 Project - Admin Account Review</strong></h2>

[V3 17a6 Designs]

                    <h3><strong>The Basics</strong></h3>

                    <strong>Role</strong>
                    UX Designer
                    
                    <strong>Tools</strong>
                    Sketch and Invision
                    
                    <strong>Time Constraint</strong>
                    2 weeks

                    <h3><strong>The Overview</strong></h3>

                    <p>The 17a6 project addresses the need for checks and balances in regards to investments. Admins would compare previous investment statements to current investment statements to ensure an employee is not involved in insider trading. A more detailed description of 17a6 can be found here https://www.sec.gov/rules/final/ic-25888.htm</p>
                    <p>17a6 invovles various types of admins who have certain levels of access and slightly different workflows. For the purpose of this case study I will be showing the normal admin account review.</p>
                   
                    
                    <h3><strong>Basic User Flow</strong></h3>
                    [Basic User Flow Diagram]
                    
                    <p>I was originally provided an excel spreadsheet that detailed two different types of admins and the various tasks they could perform and where. There was a lot of extra information not needed and was too busy to try and reference back to easily. I created this quick diagram to compare with the development and business teams to make sure we were tackling the core needs and not getting stuck in the weeds.</p>
                    <p>This flow only looked at the experience as a whole. It was later decided that a lot of the functionality requested would not be able to be done for a MVP release. Some functionality was also later decided not to be needed on certain pages and a lot of stuff ended up being moved around.</p>

                    <h3><strong>Round 1 Designs</strong></h3>
                    [V1 17a6 Designs]
                    
                    <p>The 17a6 project kicked off in the middle of the redesign project so there was a huge push to use the new components created in the redesign. The idea here was similar to the redesign in that the business wanted to avoid scrolling but they wanted to see nearly all data points needed for an account. At this point, those data points weren't completely decided as of yet so I had to wing it on figuring out what information was most important.</p>
                    
                    <p>The users wanted to stray away from the use of tables as the current tables they had were old technology and could not function in the way they wanted. However, the development team stated that they could not use any of the designs with card components due to technology limitations. In the end the users agreed to the use of a table if and only if it could be designed and developed as close to their needs as possible.</p>

          
                    <h3><strong>Round 2 Designs</strong></h3>
                    [V2 17a6 Designs]

                    <p>Those needs weren't entirely easy to make. The requirements changed almost every meeting. One of the core requirements were that the users needed a way to indicate that they had "okay'd" a line item in an account. The reason for this was because sometimes an account could have hundreds upon hundreds of line items and because of that a user may not finish reviewing an account that day. When they came back to the account they needed to know that they were already party way done and didn't have to start over.</p>
                    <p>With these designs I provided a couple different ways to use the statusing in order to find accounts that hadn't been reviewed yet. A search for the table was introduced so that any accounts outside of the search parameters would not be shown on the table. Another way to allow the user to check over statuses quickly was allowing the ability to click on the headers and change the ordering of the table. This way, say for example, the user wanted to only have their not completed accounts at the top, they could click the header and change the ordering.</p>
                    <p>The only other two core requirements were the ability to comment on a line item and the ability to edit a line item in line. A lot of 17a6 was manual work and the users had to correct line items if they did not match up to the statements that were provided. At this point the requirement of editing inline had not been completely solidified. It still needed to be decided if the user could edit the whole line item or just part of it.</p>
                    
                    <p>Users prefered the third design. The only issue with it was that there were a lot of icons at the end of a row. We needed to determine a way to keep the functionality of the icons but remove them from the end of the row.</p>

             

                    <h3><strong>Final Designs</strong></h3>
                    [V3 17a6 Designs Again]

                    <p>An additional requirement was added on at this point. The business stated that there needed to be an action/audit history showing what steps someone had taken on an account. I added it in but then it was being reconsidered if it was as important as the business thought.</p>
                    <p>I worked with the development team to add in functionality without the need for icons. We were able to decide that the editing of a line item could be done by double clicking on one of the columns within the line item. This would allow the user to edit the information they had the permissions to change.</p>
                    <p>At the end of the two weeks, unfortunately, the project had to be put on hold because requirements were changing too often. The users were happy with the idea of the look and feel of how they would go about their work using the redesign components and the table for confirming line items in an account. The issue ended up being that there were so many situational things that could happen that the users wouldn't remember functionality they needed until they came across it again.</p>

                    <h3><strong>What I Learned</strong></h3>

                    <p><ul><li>Technology restrictions need to be confrimed early. I thought the development team was using a more recent version of Angular when in reality they were several version behind. A lot of the components I was trying to introduce was from the recent Angular libraries but couldn't be coded in the older versions.</li>
                    <li>Make sure to be included in conversations with the users and the business. There was a lot of he said she said and I'd more often than not get all of the information needed. As such I had to speculate on some requirements and make multiple versions of designs to account for if I wasn't right.</li></ul></p>
                    
                    <h3><strong>What I Would Change</strong></h3>
                    
                    <p><ul><li>Not starting with the big picture. MVP requirements should've been determined shortly after the big picture was decided. This would've prevented requirement changes every meeting.</li>
                    <li>More frequent check-ins. We were not meeting for days at a time and in those days the users were finding out more things they needed. This would mean the designs I would show would already been incorrect and that was time wasted in the long run.</li>
                    <li>An alternative to more frequent check-ins would be a recording of the day to day of the user over the span of a couple days. This would've helped address most if not all edge cases of reviewing an account. This would've helped with both the MVP requirements and the ever changing list of things that needed to be added in.</li></ul></p>
                    
                    
